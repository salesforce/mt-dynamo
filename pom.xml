<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2018, salesforce.com, inc.
  ~ All rights reserved.
  ~ Licensed under the BSD 3-Clause license.
  ~ For full license text, see LICENSE.txt file in the repo root  or https://opensource.org/licenses/BSD-3-Clause
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.salesforce.dynamodb</groupId>
    <artifactId>mt-dynamodb</artifactId>
    <version>0.9.54-SNAPSHOT</version>
    <name>mt-dynamodb</name>
    <description>Multitenant support for the AWS Java SDK for Amazon DynamoDB</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <junit.version>5.5.2</junit.version>
        <aws.sdk.version>1.11.690</aws.sdk.version>
        <skipITs>true</skipITs>
        <kotlin.version>1.3.61</kotlin.version>
        <spotless-maven-plugin.version>1.26.1</spotless-maven-plugin.version>
        <ktlint.version>0.33.0</ktlint.version>
        <maven.javadoc.skip>true</maven.javadoc.skip>
    </properties>

    <scm>
        <url>https://github.com/salesforce/mt-dynamo</url>
        <connection>scm:git:git@github.com:salesforce/mt-dynamo.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/salesforce/mt-dynamo.git</developerConnection>
      <tag>HEAD</tag>
    </scm>
    <dependencies>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-dynamodb</artifactId>
            <version>${aws.sdk.version}</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
            <version>${aws.sdk.version}</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-core</artifactId>
            <version>${aws.sdk.version}</version>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>28.1-jre</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.6</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.29</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.2</version>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
            <version>1.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>18.0.0</version>
        </dependency>

        <!-- test scope -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>3.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.massisframework</groupId>
            <artifactId>j-text-utils</artifactId>
            <version>0.3.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>DynamoDBLocal</artifactId>
            <version>1.11.477</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>dynalite</artifactId>
            <version>1.12.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>4.7.2</version>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>dynamodb-local-oregon</id>
            <name>DynamoDB Local Release Repository</name>
            <url>https://s3-us-west-2.amazonaws.com/dynamodb-local/release</url>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>4.7.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <listener>false</listener>
                    <visitor>true</visitor>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>add-test-source</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/integration/java</source>
                                <source>src/integration/kotlin</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- For an explanation of the necessity of the presence of the junit-platform-surefire-provider dependency,
                 see the maven-surefire-plugin declaration in the "isolated-tests" profile below. -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>1.3.2</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <!-- Allows for running failsafe tests while skipping surefire tests.
                         See https://stackoverflow.com/questions/6612344/prevent-unit-tests-but-allow-integration-tests-in-maven -->
                    <skipTests>${skip.surefire.tests}</skipTests>
                    <!-- This is necessary to trigger BatchGetTest to happen after ScanTest
                         until such time that ScanTest's performance doesn't depend on the size
                         of data inserted by BatchGetTest -->
                    <runOrder>reversealphabetical</runOrder>
                    <properties>
                        <excludeTags>isolated-tests</excludeTags>
                    </properties>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <!--
                     Adding the maven-dependency-analyzer 1.1.1 dependency here works around bug using
                     dependency:analyze 3.1.1 with jdk11.  This dependency can be removed when maven-dependency-plugin
                     3.1.2 is published to Maven central.

                     https://issues.apache.org/jira/browse/MDEP-613
                -->
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.shared</groupId>
                        <artifactId>maven-dependency-analyzer</artifactId>
                        <version>1.11.1</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>analyze</id>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <configuration>
                            <failOnWarning>true</failOnWarning>
                            <ignoredUnusedDeclaredDependencies>ch.qos.logback:logback-classic</ignoredUnusedDeclaredDependencies>
                            <ignoredUnusedDeclaredDependencies>org.junit.jupiter:junit-jupiter-engine</ignoredUnusedDeclaredDependencies>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration><!-- [ERROR] Failed to execute goal org.jacoco:jacoco-maven-plugin:0.7.7.201606060606:check (default-check) on project zucker: The parameters 'rules' for goal org.jacoco:jacoco-maven-plugin:0.7.7.201606060606:check are missing or invalid -->
                    <rules>
                        <rule implementation="org.jacoco.maven.RuleConfiguration" />
                    </rules>
                    <excludes>
                        <!-- This class is a pass-through that contains no logic. -->
                        <exclude>**/*MtAmazonDynamoDbBase*.class</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
            </plugin>
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.0</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>8.27</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>checkstyle-execution</id>
                        <phase>package</phase>
                        <configuration>
                            <configLocation>src/test/resources/checkstyle.xml</configLocation>
                            <linkXRef>false</linkXRef>
                            <failsOnError>true</failsOnError>
                            <consoleOutput>true</consoleOutput>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                            <excludes>com/salesforce/dynamodbv2/grammar/**</excludes>
                        </configuration>
                        <goals>
                            <goal>checkstyle</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <formats>
                        <format>html</format>
                        <format>xml</format>
                    </formats>
                    <check />
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <source>${project.basedir}/src/main/java</source>
                                <source>${project.basedir}/src/main/kotlin</source>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <source>${project.basedir}/src/integration/java</source>
                                <source>${project.basedir}/src/test/java</source>
                                <source>${project.basedir}/src/test/kotlin</source>
                                <source>${project.basedir}/src/integration/kotlin</source>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <executions>
                    <!-- Replacing default-compile as it is treated specially by maven -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Replacing default-testCompile as it is treated specially by maven -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless-maven-plugin.version}</version>
                <configuration>
                    <kotlin>
                        <licenseHeader>
                            <file>${project.basedir}/license-header</file>
                        </licenseHeader>
                        <trimTrailingWhitespace />
                        <ktlint>
                            <!-- available versions: https://github.com/pinterest/ktlint/releases -->
                            <version>${ktlint.version}</version>
                        </ktlint>
                    </kotlin>
                </configuration>
            </plugin>
        </plugins>
    </build>


    <distributionManagement>
        <repository>
            <id>${release.repo.id}</id>
            <url>${release.repo.url}</url>
        </repository>
    </distributionManagement>

    <profiles>
        <profile>
            <id>noMtDynamoTests</id>
            <properties>
                <maven.test.skip>true</maven.test.skip>
            </properties>
        </profile>
        <profile>
            <id>aws-integration-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.22.2</version>
                        <configuration>
                            <!-- Overriding the default pattern is necessary because all of the plugin's default patterns
                                 contain 'IT' which is disallowed by our checkstyle. -->
                            <includes>
                                <include>**/*It</include>
                            </includes>
                            <excludes>
                                <exclude>**/*S3It</exclude>
                            </excludes>
                            <skipITs>false</skipITs>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>s3-integration-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.22.2</version>
                        <configuration>
                            <!-- Overriding the default pattern is necessary because all of the plugin's default patterns
                                 contain 'IT' which is disallowed by our checkstyle. -->
                            <includes>
                                <include>**/*S3It</include>
                            </includes>
                            <skipITs>false</skipITs>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.31.0</version>
                        <configuration combine.self="override">
                            <verbose>true</verbose>
                            <images>
                                <image>
                                    <alias>s3mock</alias>
                                    <name>adobe/s3mock</name>
                                    <run>
                                        <ports>
                                            <port>9090:9090</port>
                                            <port>9191:9191</port>
                                        </ports>
                                        <wait>
                                            <http>
                                                <url>
                                                    http://127.0.0.1:9090/favicon.ico
                                                </url>
                                            </http>
                                            <time>30000</time>
                                        </wait>
                                        <env>
                                            <initialBuckets>test-basic-backup-create</initialBuckets>
                                        </env>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- These tests are separated because they just be run with forkCount=1/reuseForks=false. -->
            <id>isolated-tests</id>
            <build>
                <plugins>
                    <!-- As of junit 5.3.0 and maven-surefire-plugin 2.22.0, we should no longer need the following
                         the junit-platform-surefire-provider dependency here.  However, it appears that, without it,
                         we lose support for the includeTags/excludeTags feature.  That feature is required to skip the
                         running of tests with the @Tag("isolated-tests") annotation.  These tests interfere with the
                         rest of the tests and therefore can only be run on their own via
                         "mvn clean test -P isolated-tests".  -->
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.22.2</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.junit.platform</groupId>
                                <artifactId>junit-platform-surefire-provider</artifactId>
                                <version>1.3.2</version>
                            </dependency>
                            <!--
                                 This dependency works around this(https://github.com/junit-team/junit5/issues/1367) bug
                                 which alleviates this error ...
                                 Execution default-test of goal org.apache.maven.plugins:maven-surefire-plugin:2.22.0:test
                                 failed: java.lang.ClassNotFoundException: org.apache.maven.plugin.surefire.log.api.ConsoleLogger
                            -->
                            <dependency>
                                <groupId>org.apache.maven.surefire</groupId>
                                <artifactId>surefire-logger-api</artifactId>
                                <version>2.22.2</version>
                                <optional>true</optional>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <properties>
                                <excludeTags>all</excludeTags>
                                <includeTags>isolated-tests</includeTags>
                            </properties>
                            <forkCount>1</forkCount>
                            <reuseForks>false</reuseForks>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
